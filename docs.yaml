swagger: "2.0"
info:
    description: "Getting Started. Welcome to our OKR API"
    version: "1.0.0"
    title: "Hackathon OKR"
    termsOfService: "http://github.com/okr"
    contact:
        email: "hollmann.tyler@gmail.com"
    license:
        name: "Apache 2.0"
        url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "okr.io"
tags:
    - name: "objectives"
      description: "A clearly defined objective will help you succeed"
    - name: "keyresults"
      description: "Every object needs key results to be measured upon"
    - name: "teams"
      description: "Define objectives for your team"
    - name: "auth"
      description: "Every app should be secure"
schemes:
    - "https"
    - "http"
paths:
    /objectives:
        post:
            tags:
                - "objectives"
            summary: "Add a new objective"
            description: ""
            operationId: "addObjective"
            consumes:
                - "application/json"
            produces:
                - "application/json"
            parameters:
                - name: "teamId"
                  in: "query"
                  description: "Filter objective per team"
                  required: true
                  type: "string"
                - in: "body"
                  name: "body"
                  description: "Objective object that needs to be added"
                  required: true
                  schema:
                      $ref: "#/definitions/Objective"
            responses:
                "405":
                    description: "Invalid input"
        get:
            tags:
                - "objectives"
            summary: "List all objective"
            description: ""
            operationId: "updatePet"
            consumes:
                - "application/json"
            produces:
                - "application/json"
            responses:
                "200":
                    description: "Success"
                    schema:
                        type: object
                        properties:
                            objectives:
                                type: array
                                items:
                                    $ref: "#/definitions/ListObjectives"
                            status:
                                type: object
                                properties:
                                    healthy:
                                        type: number
                                        example: 0
                                    critical:
                                        type: number
                                        example: 3
                                    atRisk:
                                        type: number
                                        example: 1
    /objectives/{objective._id}:
        patch:
            tags:
                - "objectives"
            summary: "Updates an objective"
            description: ""
            operationId: "patchObjective"
            consumes:
                - "application/x-www-form-urlencoded"
            produces:
                - "application/json"
            parameters:
                - name: "objective._id"
                  in: "path"
                  description: "ID of objective that needs to be updated"
                  required: true
                  type: "string"
                - in: "body"
                  name: "body"
                  description: "Objective that needs to be updated"
                  required: true
                  schema:
                      $ref: "#/definitions/Objective"
            responses:
                "204":
                    description: "No content"
        delete:
            tags:
                - "objectives"
            summary: "Deletes an objective"
            description: ""
            operationId: "deleteObjective"
            produces:
                - "application/json"
            parameters:
                - name: "objective._id"
                  in: "path"
                  description: "ID of objective that needs to be deleted"
                  required: true
                  type: "string"
            responses:
                "200":
                    description: "success"
    /objectives/{objective._id}/keyresults:
        post:
            tags:
                - "keyresults"
            summary: "Create a KR for our O"
            operationId: "createKr"
            produces:
                - "application/json"
            parameters:
                - name: "objective._id"
                  in: "path"
                  description: "ID of objective that needs to be updated"
                  required: true
                  type: "string"
                - in: "body"
                  name: "body"
                  description: "KR object that needs to be added"
                  required: true
                  schema:
                      $ref: "#/definitions/KeyResult"
            responses:
                "200":
                    description: "successful operation"
    /objectives/{objective._id}/keyresults/{keyresult._id}:
        delete:
            tags:
                - "keyresults"
            summary: "Delete a key result"
            description: ""
            operationId: "deleteKR"
            produces:
                - "application/json"
            parameters:
                - name: "objective._id"
                  in: "path"
                  description: "ID of objective that needs KR to be deleted"
                  required: true
                  type: "string"
                - name: "keyresult._id"
                  in: "path"
                  description: "ID of KR that needs to be deleted"
                  required: true
                  type: "string"
            responses:
                "200":
                    description: "successful operation"

    /teams:
        post:
            tags:
                - "teams"
            summary: "Create team"
            operationId: "createTeam"
            produces:
                - "application/json"
            parameters:
                - in: "body"
                  name: "body"
                  description: "Created user object"
                  required: true
                  schema:
                      $ref: "#/definitions/Team"
            responses:
                default:
                    description: "successful operation"
        get:
            tags:
                - "teams"
            summary: "List teamss"
            operationId: "listTeams"
            produces:
                - "application/json"
            responses:
                "200":
                    description: "Success"
                    schema:
                        type: array
                        items:
                            $ref: "#/definitions/TeamList"
    /teams/{team._id}:
        patch:
            tags:
                - "teams"
            summary: "Update a team"
            description: ""
            operationId: "patchTeam"
            produces:
                - "application/json"
            parameters:
                - name: "team._id"
                  in: "path"
                  description: "ID of objective that needs KR to be deleted"
                  required: true
                  type: "string"
                - in: "body"
                  name: "body"
                  description: "List of user object"
                  required: true
                  schema:
                      type: "array"
                      items:
                          $ref: "#/definitions/Team"
            responses:
                default:
                    description: "successful operation"
        delete:
            tags:
                - "teams"
            summary: "Delete a team"
            description: ""
            operationId: "deleteTeam"
            produces:
                - "application/json"
            parameters:
                - name: "team._id"
                  in: "path"
                  description: "ID of objective that needs KR to be deleted"
                  required: true
                  type: "string"
            responses:
                default:
                    description: "successful operation"
    /login:
        get:
            tags:
                - "auth"
            summary: "Logs user into the system"
            description: ""
            operationId: "loginUser"
            produces:
                - "application/json"
            parameters:
                - name: "username"
                  in: "query"
                  description: "The user name for login"
                  required: true
                  type: "string"
                - name: "password"
                  in: "query"
                  description: "The password for login in clear text"
                  required: true
                  type: "string"
            responses:
                "200":
                    description: "successful operation"
                    schema:
                        type: "string"
                    headers:
                        X-Rate-Limit:
                            type: "integer"
                            format: "int32"
                            description: "calls per hour allowed by the user"
                        X-Expires-After:
                            type: "string"
                            format: "date-time"
                            description: "date in UTC when token expires"
                "400":
                    description: "Invalid username/password supplied"
    /logout:
        get:
            tags:
                - "auth"
            summary: "Logs out current logged in user session"
            description: ""
            operationId: "logoutUser"
            produces:
                - "application/json"
            parameters: []
            responses:
                default:
                    description: "successful operation"

securityDefinitions:
    okr_auth:
        type: "oauth2"
        authorizationUrl: "http://okr.io/auth/login"
        flow: "implicit"
        scopes:
            write:objectives: "modify objectives in your account"
            read:objectives: "read your objectives"
definitions:
    Team:
        type: "object"
        properties:
            label:
                type: "string"
                example: "Reach power level over 9000"
    TeamList:
        type: "object"
        properties:
            label:
                type: "string"
                example: "Reach power level over 9000"
            _id:
                type: "string"
                example: "asd32fdef54"
    Objective:
        type: "object"
        required:
            - "completionDate"
            - "label"
        properties:
            teamId:
                type: "number"
                example: 123
            completionDate:
                type: "string"
                format: "date-time"
            startDate:
                type: "string"
                format: "date-time"
            label:
                type: "string"
                example: "Reach power level over 9000"
    KeyResult:
        type: "object"
        required:
            - "objectiveId"
            - "type"
        properties:
            label:
                type: "string"
            type:
                type: "string"
                example: "percentage"
                enum:
                    - "percentage"
                    - "min_max"
            minValue:
                type: "number"
                example: 0
            maxValue:
                type: "number"
                example: 100
            weight:
                type: "number"
                example: 3
                minimum: 1
                maximum: 5
            decimals:
                type: "number"
                example: 3
                minimum: 1
                maximum: 5
    ListObjectives:
        type: "object"
        properties:
            id:
                type: "integer"
                format: "int32"
            teamId:
                type: "integer"
                format: "int32"
            completionDate:
                type: "string"
                format: "date-time"
            label:
                type: "string"
                example: "Reach power level over 9000"
            keyresults:
                type: "array"
                items:
                    type: "object"
                    $ref: "#/definitions/KeyResult"
externalDocs:
    description: "Find out more about Swagger"
    url: "http://swagger.io"
